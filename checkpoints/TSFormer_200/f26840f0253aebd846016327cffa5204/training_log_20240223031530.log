2024-02-23 03:15:30,359 - easytorch-training - INFO - Initializing training.
2024-02-23 03:15:30,359 - easytorch-training - INFO - Set clip grad, param: {'max_norm': 5.0}
2024-02-23 03:15:30,359 - easytorch-training - INFO - Building training data loader.
2024-02-23 03:15:30,399 - easytorch-training - INFO - Set optim: Adam (
Parameter Group 0
    amsgrad: False
    betas: [0.9, 0.95]
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)
2024-02-23 03:15:30,399 - easytorch-training - INFO - Set lr_scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7fbc55b189d0>
2024-02-23 03:15:30,400 - easytorch-training - INFO - Initializing validation.
2024-02-23 03:15:30,400 - easytorch-training - INFO - Building val data loader.
2024-02-23 03:15:30,493 - easytorch-training - INFO - Epoch 1 / 200
2024-02-23 03:15:54,202 - easytorch-training - ERROR - Traceback (most recent call last):
  File "/root/py_time_forecasting/STEP/basicts/launcher.py", line 20, in launch_training
    easytorch.launch_training(cfg=cfg, devices=gpus, node_rank=node_rank)
TypeError: launch_training() got an unexpected keyword argument 'devices'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/anaconda3/envs/step/lib/python3.9/site-packages/easytorch/launcher/launcher.py", line 52, in training_func
    runner.train(cfg)
  File "/root/anaconda3/envs/step/lib/python3.9/site-packages/easytorch/core/runner.py", line 351, in train
    loss = self.train_iters(epoch, iter_index, data)
  File "/root/py_time_forecasting/STEP/basicts/runners/base_tsf_runner.py", line 253, in train_iters
    metric_item = self.metric_forward(metric_func, forward_return[:2])
  File "/root/py_time_forecasting/STEP/basicts/runners/base_tsf_runner.py", line 220, in metric_forward
    metric_item = metric_func(*args, null_val=self.null_val)
  File "/root/py_time_forecasting/STEP/basicts/metrics/rmse.py", line 43, in masked_rmse
    return torch.sqrt(masked_mse(preds=preds, labels=labels, null_val=null_val))
  File "/root/py_time_forecasting/STEP/basicts/metrics/rmse.py", line 23, in masked_mse
    mask /= torch.mean((mask))
KeyboardInterrupt

